from typing import List
from models import Event, Result

def format_hytek_result(event, res):
    # Simplified line format: Customize as needed for HY3/CL2 specs provided by HyTek
    # Here, each result is a fixed-width line, usually specified by HyTek docs
    # For demonstration, we'll use some common fields (update as your HyTek spec requires)
    return (
        f"{event.number:03d}"  # Event # (3 digits)
        f"{(res.heat or 1):02d}"  # Heat # (2 digits)
        f"{res.place or 0:02d}"  # Place (2 digits)
        f"{res.athlete.name[:20]:<20}"  # Name (20 chars, padded)
        f"{res.athlete.team[:6]:<6}"  # Team (6 chars, padded)
        f"{str(res.result or 'NT')[:8]:<8}"  # Result time (8 chars, padded)
        f"{(res.dq_code or '').ljust(4)}"  # DQ code (4 chars, padded)
        f"{';'.join(res.splits)[:20]:<20}"  # Splits (20 chars, padded)
        f"{str(res.points or '')[:5]:<5}"  # Points (5 chars, padded)
        "\n"
    )

def export_meet_to_hytek(events: List[Event], filepath: str):
    with open(filepath, 'w', encoding='utf-8') as hyfile:
        # Optional: Write meet header (per official HY3/CL2 requirements)
        hyfile.write("MEET RESULTS GENERATED BY Swim Meet Manager\n")
        for event in events:
            hyfile.write(f"EVENT {event.number:03d} {event.name}\n")
            for res in event.results:
                hyfile.write(format_hytek_result(event, res))
            hyfile.write("\n")  # Blank line to separate events
        # Optional: Write meet footer or end marker if required

# Usage example:
# events = [...]  # List[Event] with result data populated
# export_meet_to_hytek(events, 'meet_results.hy3')
